{"version":3,"sources":["components/ClipartKey_1391822B.png","components/Header.js","components/Keg.js","components/TapList.js","components/ReusableForm.js","components/NewKegForm.js","components/KegDetails.js","components/EditKegForm.js","components/TapControl.js","components/App.js","reportWebVitals.js","index.js"],"names":["module","exports","Header","Fragment","className","src","require","alt","Keg","props","alert","quantity","brand","name","alcoholContent","price","onClick","onPourPint","id","onKegSelection","TapList","availableKegs","map","keg","key","NewProductForm","onSubmit","formSubmissionHandler","type","placeholder","required","min","step","max","buttonText","ReusableForm","event","preventDefault","parseInt","target","value","toFixed","onNewKegCreation","v4","KegDetail","onClickingDelete","onClickingEdit","EditKegForm","onEditProduct","htmlFor","TapControl","handleClickForm","state","selectedKeg","setState","formVisibleOnPage","editing","prevState","handleAddingNewKegToList","newKeg","newMasterTapList","masterTapList","concat","handleChangingSelectedKeg","newSelectedKeg","filter","handlePourPint","toString","handleEditClick","handleEditingKegInList","kegToEdit","editedMasterTapList","handleDeletingKeg","Tap","currentVisibleState","this","NewKegForm","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6d994a6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ClipartKey_1391822B.0d992982.png\";","import React from \"react\";\r\n\r\nfunction Header() {\r\n  return (    \r\n    <React.Fragment>\r\n      <br/><br/>\r\n      <div className=\"container header hero-image\">\r\n        {/* <img src={ship}/> */}\r\n        <img src={require('./ClipartKey_1391822B.png')} alt=\"ship\" />\r\n        <h1>VIKING SHIP TAP HALL</h1>\r\n        <p>(Wimps and Posers: leave the hall)</p>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nfunction Keg(props){\r\n\r\n  let alert = null\r\n  if (props.quantity <= 0) {\r\n    alert = <span className=\"redAlert\"><em>Out of stock</em></span>\r\n  } else if (props.quantity <= 10) {\r\n    alert = <span className=\"redAlert\"><em>Almost Empty</em></span>\r\n  }\r\n\r\n  return (    \r\n    <div className=\"keg\">          \r\n      <h4>{props.brand} - {props.name} - {props.alcoholContent}%ALC - <span className=\"green\">${props.price}/Pint</span>  {alert}</h4>          \r\n      <p>Quantity (approx pints left): <span className=\"redAlert\">{props.quantity}</span></p>        \r\n      <button className=\"btn btn-outline-info btn-sm\" onClick = {() => props.onPourPint(props.id)}>Pour a pint!</button>\r\n      <button className=\"btn btn-outline-info btn-sm\" onClick = {() => props.onKegSelection(props.id)}>Details</button>\r\n    </div>    \r\n  )\r\n}\r\n\r\nKeg.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  brand: PropTypes.string.isRequired,\r\n  price: PropTypes.string.isRequired,\r\n  alcoholContent: PropTypes.string.isRequired,\r\n  quantity: PropTypes.string,\r\n  id: PropTypes.string,\r\n  onKegSelection: PropTypes.func,\r\n  onPourPint: PropTypes.func\r\n}\r\n\r\nexport default Keg;","import React from \"react\";\r\nimport Keg from \"./Keg.js\"\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\n\r\nfunction TapList(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <h2 className=\"tapList\">- Tap List -</h2>\r\n      <hr/>      \r\n      {props.availableKegs.map((keg) =>\r\n        <Keg\r\n        name={keg.name}\r\n        brand={keg.brand}\r\n        price={keg.price}\r\n        alcoholContent={keg.alcoholContent}\r\n        quantity={keg.quantity}\r\n        id={keg.id}\r\n        key={keg.id}\r\n        onKegSelection={props.onKegSelection}\r\n        onPourPint={props.onPourPint}/>\r\n      )}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nTapList.propTypes = {\r\n  availableKegs: PropTypes.array,\r\n  onKegSelection: PropTypes.func //dont need?\r\n  \r\n};\r\n\r\nexport default TapList;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction NewProductForm(props) {\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <form onSubmit={props.formSubmissionHandler}>\r\n        <div className=\"form-group\">\r\n          <input\r\n          className=\"form-control\"\r\n            type='text'\r\n            name='name'\r\n            placeholder='Name' required /><br/>\r\n          <input\r\n          className=\"form-control\"\r\n            type='text'\r\n            name='brand'\r\n            placeholder='Brand' required /><br/>\r\n          <input\r\n          className=\"form-control\"\r\n            type=\"number\"\r\n            name='price'\r\n            placeholder='Price' min=\"0.01\" step=\"0.01\" required /><br/>\r\n          <input\r\n          className=\"form-control\"\r\n            type=\"number\"\r\n            name='alcoholContent'\r\n            placeholder='Alcohol Content' min=\"0.01\" step=\"0.01\" required/><br/>\r\n          <input\r\n          className=\"form-control\"\r\n            type=\"number\"\r\n            name='quantity'\r\n            placeholder='Quantity (full keg = 124)' min=\"1\" step=\"1\" max=\"124\" required/><br/>\r\n          <button className=\"btn btn-outline-danger btn-block\" type='submit'>{props.buttonText}</button>\r\n        </div>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nNewProductForm.propTypes = {\r\n  formSubmissionHandler: PropTypes.func,\r\n  buttonText: PropTypes.string\r\n};\r\n\r\nexport default NewProductForm;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 } from 'uuid';\r\nimport ReusableForm from \"./ReusableForm\";\r\n\r\n\r\nfunction NewProductForm(props) {\r\n\r\n  function handleNewProductFormSubmission(event){\r\n    event.preventDefault();    \r\n    const price = parseInt(event.target.price.value).toFixed(2);\r\n    props.onNewKegCreation({name: event.target.name.value, brand: event.target.brand.value, price: price, alcoholContent: event.target.alcoholContent.value, quantity: event.target.quantity.value, id: v4() })  }  \r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <ReusableForm\r\n      formSubmissionHandler={handleNewProductFormSubmission}\r\n      buttonText=\"Add Keg\"/>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nNewProductForm.propTypes = {\r\n  onNewProductCreation: PropTypes.func\r\n};\r\n\r\nexport default NewProductForm;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction KegDetail(props){\r\n  const { keg, onClickingDelete} = props;  \r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"keg\">\r\n        <h1 className=\"black\">Keg Details</h1>\r\n        <hr/>\r\n        <h2>Name: {keg.name}</h2>\r\n        <h4>Brand: {keg.brand}</h4>\r\n        <h4>Price/Pint: ${keg.price}</h4>\r\n        <h4>Alcohol Content: {keg.alcoholContent} %ABU</h4>\r\n        <h4>Quantity (approx pint pours left): {keg.quantity}</h4>\r\n        <hr/>\r\n        <button className=\"btn btn-outline-info btn-block\" onClick={ props.onClickingEdit }>Edit This Keg</button>\r\n        <button className=\"btn btn-outline-danger btn-block\" onClick={() => onClickingDelete(keg.id) }>Delete This Keg</button>\r\n      </div>\r\n      <hr/>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nKegDetail.propTypes = {\r\n  keg: PropTypes.object,\r\n  onClickingEdit: PropTypes.func,\r\n  onClickingDelete: PropTypes.func\r\n}\r\n\r\nexport default KegDetail;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 } from \"uuid\";\r\n\r\nfunction EditKegForm(props) {\r\n\r\n  function handleEditKegFormSubmission(event) {\r\n    event.preventDefault();\r\n    props.onEditProduct({\r\n      name: event.target.name.value,\r\n      brand: event.target.brand.value,\r\n      price: event.target.price.value,\r\n      alcoholContent: event.target.alcoholContent.value,\r\n      quantity: event.target.quantity.value,\r\n      id: v4()\r\n    })\r\n  }\r\n  \r\n  return (\r\n    <React.Fragment>\r\n        <form onSubmit={handleEditKegFormSubmission}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name\">Name:</label>\r\n            <input\r\n            className=\"form-control\"\r\n              type='text'\r\n              name='name'\r\n              placeholder={props.keg.name} required /><br/>\r\n            <label htmlFor=\"brand\">Brand:</label>\r\n            <input\r\n            className=\"form-control\"\r\n              type='text'\r\n              name='brand'\r\n              placeholder={props.keg.brand} required /><br/>\r\n            <label htmlFor=\"price\">Price:</label>\r\n            <input\r\n            className=\"form-control\"\r\n              type=\"number\"\r\n              name='price'\r\n              placeholder={props.keg.price} min=\"0.01\" step=\"0.01\" required /><br/>\r\n            <label htmlFor=\"alcoholContent\">Alcohol Content:</label>\r\n            <input\r\n            className=\"form-control\"\r\n              type=\"number\"\r\n              name='alcoholContent'\r\n              placeholder={props.keg.alcoholContent} min=\"0.01\" step=\"0.01\" required/><br/>\r\n            <label htmlFor=\"quantity\">Quantity:</label>\r\n            <input\r\n            className=\"form-control\"\r\n              type=\"number\"\r\n              name='quantity'\r\n              placeholder={props.keg.quantity} min=\"1\" step=\"1\" max=\"124\" required/><br/>\r\n          <button className=\"btn btn-outline-danger btn-block\" type='submit'>Update Keg</button>\r\n        </div>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nEditKegForm.propTypes = {\r\n  onEditProduct: PropTypes.func,\r\n  keg: PropTypes.object\r\n};\r\n\r\nexport default EditKegForm;","import React from 'react';\r\nimport TapList from \"./TapList.js\"\r\nimport NewKegForm from \"./NewKegForm.js\"\r\nimport KegDetail from \"./KegDetails.js\"\r\nimport EditKegForm from \"./EditKegForm.js\"\r\n\r\n\r\nclass TapControl extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      masterTapList: [{name: \"Viking Mead\", brand: \"Skull Crusher\", price: \"4.50\", alcoholContent: \"8.5\", quantity: \"10\", id:\"10001\" }, {name: \"Dansk Blod\", brand: \"Einstök\", price: \"5.50\", alcoholContent: \"6.5\", quantity: \"0\", id:\"10002\" }, {name: \"Savage Pilsner\", brand: \"Ragnar\", price: \"3.50\", alcoholContent: \"3.5\", quantity: \"124\", id:\"10003\" }],\r\n      formVisibleOnPage: false,\r\n      selectedKeg: null,\r\n      editing: false\r\n    }\r\n  }\r\n\r\n  handleClickForm = () => {\r\n    if (this.state.selectedKeg != null){\r\n      this.setState({\r\n        formVisibleOnPage: false,\r\n        selectedKeg: null,\r\n        editing: false\r\n      });\r\n    } else {\r\n      this.setState(prevState => ({\r\n        formVisibleOnPage: !prevState.formVisibleOnPage\r\n      }));\r\n    }\r\n  }\r\n\r\n  handleAddingNewKegToList = (newKeg) => {\r\n    const newMasterTapList = this.state.masterTapList.concat(newKeg);\r\n    this.setState({\r\n      masterTapList: newMasterTapList,\r\n      formVisibleOnPage: false });\r\n  }\r\n\r\n  handleChangingSelectedKeg = (id) => {       \r\n    const newSelectedKeg = this.state.masterTapList.filter(keg => keg.id === id)[0];  \r\n    this.setState({selectedKeg: newSelectedKeg});\r\n  }\r\n\r\n  handlePourPint = (id) => {\r\n    const newMasterTapList = this.state.masterTapList;\r\n    for (const keg of newMasterTapList) {\r\n      if (keg.id === id) {\r\n        if (keg.quantity > 0) {\r\n          keg.quantity -= 1;\r\n          keg.quantity = keg.quantity.toString();\r\n        } else if (keg.quantity <= 0) {\r\n          alert(\"YYYAARRRGGG! Thy Keg is Empty!\")\r\n        }\r\n        break;\r\n      }\r\n    }\r\n    this.setState({\r\n      masterTapList: newMasterTapList,\r\n      formVisibleOnPage: false });\r\n  }\r\n\r\n  handleEditClick = () => {    \r\n    this.setState({editing: true});\r\n  }\r\n\r\n  handleEditingKegInList = (kegToEdit) => {    \r\n    const editedMasterTapList = this.state.masterTapList.filter(Keg => Keg.id !== this.state.selectedKeg.id).concat(kegToEdit);    \r\n  this.setState({\r\n      masterTapList: editedMasterTapList,\r\n      editing: false,\r\n      selectedKeg: null\r\n    });\r\n  }\r\n\r\n  handleDeletingKeg = (id) => {\r\n    const newMasterTapList = this.state.masterTapList.filter(Tap => Tap.id !== id);\r\n    this.setState({\r\n      masterTapList: newMasterTapList,\r\n      selectedKeg: null\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let currentVisibleState = null;\r\n    let buttonText = null;    \r\n    if (this.state.editing){\r\n      currentVisibleState = <EditKegForm keg = {this.state.selectedKeg} onEditProduct = {this.handleEditingKegInList}/>\r\n      buttonText = \"Return to Tap List\";\r\n    } else if (this.state.selectedKeg != null) {\r\n        currentVisibleState = <KegDetail \r\n        keg = {this.state.selectedKeg} \r\n        onClickingDelete = {this.handleDeletingKeg}\r\n        onClickingEdit = {this.handleEditClick}/>\r\n        buttonText = \"Return to Tap List\";\r\n    } else if (this.state.formVisibleOnPage) {\r\n        currentVisibleState = <NewKegForm onNewKegCreation={this.handleAddingNewKegToList} />;\r\n        buttonText = \"Return to Tap List\"\r\n    } else {     \r\n        currentVisibleState = <TapList \r\n        availableKegs={this.state.masterTapList}\r\n        onKegSelection={this.handleChangingSelectedKeg}\r\n        onPourPint={this.handlePourPint}/>      \r\n        buttonText = \"Add New Keg\"\r\n      }\r\n\r\n    return (      \r\n      <div className=\"container mainBox\">\r\n        {currentVisibleState}\r\n        <br/>\r\n        <button className=\"arrow btn btn-outline-info btn-block\" onClick={this.handleClickForm}>{buttonText}</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TapControl;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport TapControl from \"./TapControl\";\r\n\r\n\r\nfunction App(){\r\n  return ( \r\n    <React.Fragment>\r\n      <div className=\"container\">\r\n        <Header />\r\n        <TapControl />   \r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}